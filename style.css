body {
	--color-primary: #50f4fa;
	--color-border: #9ce3f7;
	--color-text: #ffffff;
	--color-shape: var(--color-text);
	--shape-size: 32px;
	--content-width: calc(var(--shape-size) * 10);
	--content-height: calc(var(--shape-size) * 20);
	--sidebar-width: 320px;

	margin: 0;
	padding: 0;
	font-family: sans-serif;
	background: url('assets/bg-800.jpg') no-repeat center top;
	background-size: cover;
	color: var(--color-text);
}
@media screen and (min-width: 800px) {
	body {
		background-image: url('assets/bg-1400.jpg');
	}
}
@media screen and (min-width: 1400px) {
	body {
		background-image: url('assets/bg.jpg');
	}
}

h1, h2, h3 {
	margin: 0;
	text-align: center;
}
h1 {
	font-size: 24px;
}
h2 {
	font-size: 20px;
}
h3 {
	font-size: 16px;
}

.container {
	margin: 0 auto;
	padding: 40px 20px;
	display: grid;
	grid-template-columns: var(--sidebar-width) fit-content(100%) var(--sidebar-width);
	justify-content: center;
	gap: 20px;
}

.block {
	padding: 8px 10px 6px;
	border: 2px solid var(--color-border);
	background-color: #00000080;
}
.block + .block {
	margin-top: 20px;
}

.stats {
	margin: 20px 0 0;
	padding: 0;
	font-size: 24px;
	list-style: none;
}
.stats li {
	display: grid;
	grid-template-columns: calc(var(--shape-size) * 4) 40%;
	gap: 20px;
	justify-content: flex-end;
}
.stats li + li {
	margin-top: 20px;
}
.stats li > span:first-child {
	position: relative;
	height: calc(var(--shape-size) * 2);
}
.stats li > span:first-child div {
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
}
.stats li > span:last-child {
	display: flex;
	align-items: center;
}
.stats .shape {
	position: relative;
}

.shape {
	--transition-delay: 0.1s;
	position: absolute;
	display: block;
	color: var(--color-shape);
	transition: ease-out var(--transition-delay);
}
.shape div {
	position: absolute;
	transform-origin: 0 0;
}
.shape div::before,
.shape div::after {
	position: absolute;
	background-color: currentcolor;
	content: "";
}

/* shape F */
.shape-f {
	width: calc(var(--shape-size) * 3);
	height: calc(var(--shape-size) * 3);
}
.shape-f div {
	width: calc(var(--shape-size) * 3);
	height: calc(var(--shape-size) * 2);
}
.shape-f div::before {
	left: 50%;
	transform: translateX(-50%);
	width: var(--shape-size);
	height: var(--shape-size);
}
.shape-f div::after {
	top: 50%;
	width: calc(3 * var(--shape-size));
	height: var(--shape-size);
}

.shape-f_2 div,
.shape-f_4 div {
	left: var(--shape-size);
	transform: rotate(90deg) translateY(-100%);
}
.shape-f_3 div {
	top: var(--shape-size);
	transform: rotate(180deg) translate(-100%, -100%);
}
.shape-f_4 div {
	transform: rotate(270deg) translate(-100%, -50%);
}

/* shape LEG */
.shape-leg,
.shape-legr {
	width: calc(var(--shape-size) * 3);
	height: calc(var(--shape-size) * 3);
}
.shape-leg div,
.shape-legr div {
	width: calc(var(--shape-size) * 3);
	height: calc(var(--shape-size) * 2);
}

.shape-leg div::before,
.shape-legr div::before {
	width: calc(var(--shape-size) * 3);
	height: var(--shape-size);
}
.shape-leg div::after,
.shape-legr div::after {
	width: var(--shape-size);
	height: var(--shape-size);
}
.shape-leg div::after,
.shape-legr div::after {
	top: var(--shape-size);
}
.shape-legr div::after {
	left: calc(var(--shape-size) * 2);
}

.shape-leg_2 div,
.shape-leg_4 div,
.shape-legr_2 div,
.shape-legr_4 div {
	left: calc(var(--shape-size) * 3);
	transform: rotate(90deg);
}
.shape-leg_3 div,
.shape-legr_3 div {
	left: calc(var(--shape-size) * 3);
	top: calc(var(--shape-size) * 3);
	transform: rotate(180deg);
}
.shape-leg_4 div,
.shape-legr_4 div {
	left: 0;
	top: calc(var(--shape-size) * 3);
	transform: rotate(270deg);
}

/* shape Z */
.shape-z,
.shape-zr {
	width: calc(var(--shape-size) * 3);
	height: calc(var(--shape-size) * 3);
}
.shape-z div,
.shape-zr div {
	width: calc(var(--shape-size) * 3);
	height: calc(var(--shape-size) * 2);
}

.shape-z div::before, .shape-z div::after,
.shape-zr div::before, .shape-zr div::after {
	width: calc(var(--shape-size) * 2);
	height: calc(var(--shape-size) * 1);
}

.shape-z div::after {
	top: 50%;
	right: 0;
}
.shape-zr div::before {
	right: 0;
}
.shape-zr div::after {
	top: 50%;
}

.shape-z_2 div,
.shape-zr_2 div {
	left: calc(var(--shape-size) * 3);
	transform: rotate(90deg);
}
.shape-z_3 div,
.shape-zr_3 div {
	left: calc(var(--shape-size) * 3);
	top: calc(var(--shape-size) * 3);
	transform: rotate(180deg);
}
.shape-z_4 div,
.shape-zr_4 div {
	top: calc(var(--shape-size) * 3);
	transform: rotate(270deg);
}

/* shape square */
.shape-square,
.shape-square div,
.shape-square div::before {
	width: calc(var(--shape-size) * 2);
	height: calc(var(--shape-size) * 2);
}

/* shape square */
.shape-line {
	width: calc(var(--shape-size) * 4);
	height: calc(var(--shape-size) * 4);
}
.shape-line div,
.shape-line div::before {
	width: calc(var(--shape-size) * 4);
	height: var(--shape-size);
}

.shape-line_1 div {
	top: var(--shape-size);
}
.shape-line_2 div {
	left: calc(var(--shape-size) * 3);
	transform: rotate(90deg);
}
.shape-line_3 div {
	top: calc(var(--shape-size) * 2);
}
.shape-line_4 div {
	left: calc(var(--shape-size) * 2);
	transform: rotate(90deg);
}

.next-shape {
	display: grid;
	grid-template-columns: 1fr 1fr;
	justify-content: center;
	align-items: center;
}
.next-shape__icon {
	position: relative;
	height: calc(var(--shape-size) * 4);
}
.next-shape__icon > * {
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%,-50%);
}

.score p {
	margin: 0;
	font-size: 20px;
	text-align: center;
}

.nav-hint {
	position: relative;
	margin: 0;
	padding: 0;
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	list-style: none;
}
.nav-hint__item {
	height: 48px;
	display: grid;
	align-items: center;
	justify-content: center;
}
.nav-hint__item_left {
	transform: rotate(180deg);
}
.nav-hint__item_down {
	transform: rotate(90deg);
}

.content {
	padding: 10px;
}
.content__inner {
	position: relative;
	width: var(--content-width);
	height: var(--content-height);
	overflow: hidden;
}

.board__item {
	position: absolute;
	width: 100%;
	height: var(--shape-size);
}

.dialog {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	background: #000000d2;
}
.dialog--hide {
	display: none;
}
.dialog-container {
	margin: 0 auto;
	padding: 80px 30px;
	border: 2px solid var(--color-border);
	border-radius: 10px;
	width: 100%;
	max-width: 600px;
	background-color: #0a112dc0;
	box-sizing: border-box;
	display: flex;
	flex-direction: column;
	align-items: center;
}

.startGame__title {
	margin-bottom: 80px;
	height: 42px;
	background: url('assets/title.svg') no-repeat center;
	background-size: contain;
	font-size: 0px;
}
.endGame__title {
	margin-bottom: 40px;
	height: 42px;
	font-size: 32px;
	color: var(--color-primary);
}

.btn {
	--color: var(--color-primary);
	position: relative;
	padding: 10px 55px;
	border: none;
	font-size: 42px;
	line-height: 1.2em;
	letter-spacing: 4px;
	background: none;
	color: #f1f1f1;
	font-weight: bold;
	box-sizing: border-box;
	outline: none;
	overflow: hidden;
	transition: 0.5s;
	-webkit-box-reflect: below 1px linear-gradient(transparent, #0005);
}
.btn:hover {
	background: var(--color);
	color: #fff;
	box-shadow: 0 0 5px var(--color),
	      0 0 25px var(--color),
	      0 0 50px var(--color),
	      0 0 200px var(--color);
}

.btn::before,
.btn::after, 
.btn span::before,
.btn span::after {
	position: absolute;
	display: block;
	content: '';
}

/* top */
.btn::before {
	top: 0;
	left: -100%;
	width: 100%;
	height: 2px;
	background: linear-gradient(90deg, transparent, var(--color));
	animation: btnAnimateTop 1s linear infinite;
}
@keyframes btnAnimateTop {
  0% { left: -100%; }
  50%, 100% { left: 100%; }
}

/* bot */
.btn::after {
	bottom: 0; right: -100%;
	width: 100%;
	height: 2px;
	background: linear-gradient(270deg, transparent, #03e9f4);
	animation: btnAnimateBot 1s linear infinite;
	animation-delay: 0.5s;
}
@keyframes btnAnimateBot {
  0% { right: -100%; }
  50%, 100% { right: 100%; }
}

.btn span::before {
	bottom: -100%;
	left: 0;
	width: 2px;
	height: 100%;
	background: linear-gradient(0deg, transparent, #03e9f4);
	animation: btnAnimateLeft 1s linear infinite;
	animation-delay: 0.75s;
}
@keyframes btnAnimateLeft {
	0% { bottom: -100%; }
	50%, 100% { bottom: 100%; }
}

.btn span::after {
	top: -100%;
	right: 0;
	width: 2px;
	height: 100%;
	background: linear-gradient(180deg, transparent, var(--color));
	animation: btnAnimateRight 1s linear infinite;
	animation-delay: 0.25s;
}
@keyframes btnAnimateRight {
	0% { top: -100%; }
	50%, 100% { top: 100%; }
}

